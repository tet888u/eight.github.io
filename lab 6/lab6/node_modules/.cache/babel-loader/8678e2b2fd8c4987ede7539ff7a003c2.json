{"ast":null,"code":"import _objectSpread from \"C:\\\\web\\\\lab6 buy\\\\rcrud_with_redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\web\\\\lab6 buy\\\\rcrud_with_redux\\\\src\\\\components\\\\TransactionForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from \"../actions/transactionActions\";\nimport { bindActionCreators } from \"redux\";\n\nclass TransactionForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, this.returnStateObject());\n\n    this.handleInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      if (this.props.currentIndex == -1) this.props.insertTransaction(this.state);else this.props.updateTransaction(this.state);\n    };\n  }\n\n  returnStateObject() {\n    if (this.props.currentIndex == -1) return {\n      bAccountNo: '',\n      iFSC: '',\n      bName: '',\n      amount: ''\n    };else return this.props.list[this.props.currentIndex];\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.currentIndex != this.props.currentIndex || prevProps.list.length != this.props.list.length) {\n      this.setState(_objectSpread({}, this.returnStateObject()));\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"bAccountNo\",\n      placeholder: \"Name\",\n      onChange: this.handleInputChange,\n      value: this.state.bAccountNo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"bName\",\n      placeholder: \"Email\",\n      onChange: this.handleInputChange,\n      value: this.state.bName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"amount\",\n      placeholder: \"Phone\",\n      onChange: this.handleInputChange,\n      value: this.state.amount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    list: state.list,\n    currentIndex: state.currentIndex\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    insertTransaction: actions.insert,\n    updateTransaction: actions.update\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm);","map":{"version":3,"sources":["C:/web/lab6 buy/rcrud_with_redux/src/components/TransactionForm.js"],"names":["React","Component","connect","actions","bindActionCreators","TransactionForm","state","returnStateObject","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","props","currentIndex","insertTransaction","updateTransaction","bAccountNo","iFSC","bName","amount","list","componentDidUpdate","prevProps","length","render","mapStateToProps","mapDispatchToProps","dispatch","insert","update"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from \"../actions/transactionActions\"\nimport { bindActionCreators } from \"redux\";\n\nclass TransactionForm extends Component {\n\n    state = {\n        ...this.returnStateObject()\n    }\n\n    returnStateObject() {\n        if (this.props.currentIndex == -1)\n            return {\n                bAccountNo: '',\n                iFSC: '',\n                bName: '',\n                amount: ''\n            }\n        else\n            return this.props.list[this.props.currentIndex]\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentIndex != this.props.currentIndex || prevProps.list.length != this.props.list.length) {\n            this.setState({ ...this.returnStateObject() })\n        }\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        if (this.props.currentIndex == -1)\n            this.props.insertTransaction(this.state)\n        else\n            this.props.updateTransaction(this.state)\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n                <input name=\"bAccountNo\" placeholder=\"Name\" onChange={this.handleInputChange} value={this.state.bAccountNo} /><br />\n                < input name=\"bName\" placeholder=\"Email\" onChange={this.handleInputChange} value={this.state.bName} /><br />\n                < input name=\"amount\" placeholder=\"Phone\" onChange={this.handleInputChange} value={this.state.amount} /><br />\n                <button type=\"submit\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        list: state.list,\n        currentIndex: state.currentIndex\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({\n        insertTransaction: actions.insert,\n        updateTransaction: actions.update\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionForm)"]},"metadata":{},"sourceType":"module"}